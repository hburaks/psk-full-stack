/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { getAllActiveTestTemplates } from '../fn/public-test/get-all-active-test-templates';
import { GetAllActiveTestTemplates$Params } from '../fn/public-test/get-all-active-test-templates';
import { getTestTemplateById } from '../fn/public-test/get-test-template-by-id';
import { GetTestTemplateById$Params } from '../fn/public-test/get-test-template-by-id';
import { getTestTemplateQuestions } from '../fn/public-test/get-test-template-questions';
import { GetTestTemplateQuestions$Params } from '../fn/public-test/get-test-template-questions';
import { PublicTestResultResponse } from '../models/public-test-result-response';
import { QuestionResponse } from '../models/question-response';
import { submitTestAnswers } from '../fn/public-test/submit-test-answers';
import { SubmitTestAnswers$Params } from '../fn/public-test/submit-test-answers';
import { TestTemplateResponse } from '../models/test-template-response';


/**
 * Public endpoints for accessing and submitting tests
 */
@Injectable({ providedIn: 'root' })
export class PublicTestService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `submitTestAnswers()` */
  static readonly SubmitTestAnswersPath = '/v3/public/tests/{id}/submit';

  /**
   * Submit test answers for public access.
   *
   *
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `submitTestAnswers()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  submitTestAnswers$Response(params: SubmitTestAnswers$Params, context?: HttpContext): Observable<StrictHttpResponse<PublicTestResultResponse>> {
    return submitTestAnswers(this.http, this.rootUrl, params, context);
  }

  /**
   * Submit test answers for public access.
   *
   *
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `submitTestAnswers$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  submitTestAnswers(params: SubmitTestAnswers$Params, context?: HttpContext): Observable<PublicTestResultResponse> {
    return this.submitTestAnswers$Response(params, context).pipe(
      map((r: StrictHttpResponse<PublicTestResultResponse>): PublicTestResultResponse => r.body)
    );
  }

  /** Path part for operation `getAllActiveTestTemplates()` */
  static readonly GetAllActiveTestTemplatesPath = '/v3/public/tests';

  /**
   * Get all active test templates for public access.
   *
   *
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getAllActiveTestTemplates()` instead.
   *
   * This method doesn't expect any request body.
   */
  getAllActiveTestTemplates$Response(params?: GetAllActiveTestTemplates$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<TestTemplateResponse>>> {
    return getAllActiveTestTemplates(this.http, this.rootUrl, params, context);
  }

  /**
   * Get all active test templates for public access.
   *
   *
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getAllActiveTestTemplates$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getAllActiveTestTemplates(params?: GetAllActiveTestTemplates$Params, context?: HttpContext): Observable<Array<TestTemplateResponse>> {
    return this.getAllActiveTestTemplates$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<TestTemplateResponse>>): Array<TestTemplateResponse> => r.body)
    );
  }

  /** Path part for operation `getTestTemplateById()` */
  static readonly GetTestTemplateByIdPath = '/v3/public/tests/{id}';

  /**
   * Get test template by ID for public access.
   *
   *
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getTestTemplateById()` instead.
   *
   * This method doesn't expect any request body.
   */
  getTestTemplateById$Response(params: GetTestTemplateById$Params, context?: HttpContext): Observable<StrictHttpResponse<TestTemplateResponse>> {
    return getTestTemplateById(this.http, this.rootUrl, params, context);
  }

  /**
   * Get test template by ID for public access.
   *
   *
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getTestTemplateById$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getTestTemplateById(params: GetTestTemplateById$Params, context?: HttpContext): Observable<TestTemplateResponse> {
    return this.getTestTemplateById$Response(params, context).pipe(
      map((r: StrictHttpResponse<TestTemplateResponse>): TestTemplateResponse => r.body)
    );
  }

  /** Path part for operation `getTestTemplateQuestions()` */
  static readonly GetTestTemplateQuestionsPath = '/v3/public/tests/{id}/questions';

  /**
   * Get test template questions for public access.
   *
   *
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getTestTemplateQuestions()` instead.
   *
   * This method doesn't expect any request body.
   */
  getTestTemplateQuestions$Response(params: GetTestTemplateQuestions$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<QuestionResponse>>> {
    return getTestTemplateQuestions(this.http, this.rootUrl, params, context);
  }

  /**
   * Get test template questions for public access.
   *
   *
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getTestTemplateQuestions$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getTestTemplateQuestions(params: GetTestTemplateQuestions$Params, context?: HttpContext): Observable<Array<QuestionResponse>> {
    return this.getTestTemplateQuestions$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<QuestionResponse>>): Array<QuestionResponse> => r.body)
    );
  }

}
