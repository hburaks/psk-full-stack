/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import {HttpClient, HttpContext} from '@angular/common/http';
import {Injectable} from '@angular/core';
import {Observable} from 'rxjs';
import {map} from 'rxjs/operators';

import {BaseService} from '../base-service';
import {ApiConfiguration} from '../api-configuration';
import {StrictHttpResponse} from '../strict-http-response';

import {submitTest, SubmitTest$Params} from '../fn/user-answer/submit-test';
import {SubmitTestResponse} from '../models/submit-test-response';


/**
 * User endpoints for test-taking and answer submission
 */
@Injectable({ providedIn: 'root' })
export class UserAnswerService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `submitTest()` */
  static readonly SubmitTestPath = '/v1/user-tests/{userTestId}/submit-test';

  /**
   * Submit all answers for a test and complete it.
   *
   *
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `submitTest()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  submitTest$Response(params: SubmitTest$Params, context?: HttpContext): Observable<StrictHttpResponse<SubmitTestResponse>> {
    return submitTest(this.http, this.rootUrl, params, context);
  }

  /**
   * Submit all answers for a test and complete it.
   *
   *
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `submitTest$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  submitTest(params: SubmitTest$Params, context?: HttpContext): Observable<SubmitTestResponse> {
    return this.submitTest$Response(params, context).pipe(
      map((r: StrictHttpResponse<SubmitTestResponse>): SubmitTestResponse => r.body)
    );
  }

}
