/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { AdminTestCommentResponse } from '../models/admin-test-comment-response';
import { createComment } from '../fn/comment-admin/create-comment';
import { CreateComment$Params } from '../fn/comment-admin/create-comment';
import { getCommentsByTestTemplate } from '../fn/comment-admin/get-comments-by-test-template';
import { GetCommentsByTestTemplate$Params } from '../fn/comment-admin/get-comments-by-test-template';


/**
 * Admin endpoints for managing test template comments
 */
@Injectable({ providedIn: 'root' })
export class CommentAdminService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `getCommentsByTestTemplate()` */
  static readonly GetCommentsByTestTemplatePath = '/v2/admin/comments/test-template/{testTemplateId}';

  /**
   * Get all comments for a test template.
   *
   *
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getCommentsByTestTemplate()` instead.
   *
   * This method doesn't expect any request body.
   */
  getCommentsByTestTemplate$Response(params: GetCommentsByTestTemplate$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<AdminTestCommentResponse>>> {
    return getCommentsByTestTemplate(this.http, this.rootUrl, params, context);
  }

  /**
   * Get all comments for a test template.
   *
   *
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getCommentsByTestTemplate$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getCommentsByTestTemplate(params: GetCommentsByTestTemplate$Params, context?: HttpContext): Observable<Array<AdminTestCommentResponse>> {
    return this.getCommentsByTestTemplate$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<AdminTestCommentResponse>>): Array<AdminTestCommentResponse> => r.body)
    );
  }

  /** Path part for operation `createComment()` */
  static readonly CreateCommentPath = '/v2/admin/comments/test-template/{testTemplateId}';

  /**
   * Create a new comment for a test template.
   *
   *
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `createComment()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  createComment$Response(params: CreateComment$Params, context?: HttpContext): Observable<StrictHttpResponse<AdminTestCommentResponse>> {
    return createComment(this.http, this.rootUrl, params, context);
  }

  /**
   * Create a new comment for a test template.
   *
   *
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `createComment$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  createComment(params: CreateComment$Params, context?: HttpContext): Observable<AdminTestCommentResponse> {
    return this.createComment$Response(params, context).pipe(
      map((r: StrictHttpResponse<AdminTestCommentResponse>): AdminTestCommentResponse => r.body)
    );
  }

}
